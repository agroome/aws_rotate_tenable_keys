Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  TioDomain:
    Type: String
    Default: example.com
    Description: this is a test
  TioUsername:
    Type: String
    Default: 'user@example.com'
  ApiKeysPrefix:
    Type: String
    Default: apikeys
  TioAccessKey:
    Type: String
    Default: Change Me
    NoEcho: True
  TioSecretKey:
    Type: String
    Default: Change Me
    NoEcho: True
  RotationDays:
    Type: Number
    Default: 7

Resources:
  TenableApiKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ApiKeysPrefix}/${TioUsername}'
      Description: Tenable API Key
      SecretString: !Sub '{"accessKey":"${TioAccessKey}","secretKey":"${TioSecretKey}","tioUsername":"${TioUsername}"}'
      Tags:
        - Key: tenable-key-type
          Value: tio
        - Key: tenable-domain
          Value: !Sub '${TioDomain}'
        - Key: tenable-role
          Value: Administrator

  ApiKeyRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    Properties:
      RotationLambdaARN: !GetAtt ApiKeyRotationLambda.Arn
      RotationRules:
        AutomaticallyAfterDays: !Sub '${RotationDays}'
      SecretId: !Ref TenableApiKey

  ApiKeyRotationLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: rotate_tenable_keys
      Runtime: python3.9
      Handler: rotate.lambda_handler
      CodeUri: ./app
      Policies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:DescribeSecret
                - secretsmanager:GetSecretValue
                - secretsmanager:PutSecretValue
                - secretsmanager:UpdateSecretVersionStage
              Resource:
                - arn:aws:secretsmanager:us-east-1:773284714180:secret:*
              Condition:
                  StringEquals:
                      "aws:ResourceTag/tenable-key-type": tio
            - Effect: Allow
              Action:
                - secretsmanager:ListSecrets
              Resource: '*'

  ApiKeyRotationLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ApiKeyRotationLambda.Arn
      Action: lambda:InvokeFunction
      Principal: secretsmanager.amazonaws.com
